AWSTemplateFormatVersion: '2010-09-09'
Description: K3s Agent Stack - VPC + Subnet + IGW + Security Group + LaunchTemplate + AutoScalingGroup

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH KeyPair for EC2 login

Resources:

  # VPC
  InfraVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.110.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: infra-vpc
        - Key: ManagedBy
          Value: CloudFormation

  # Public Subnet
  InfraPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref InfraVPC
      CidrBlock: 10.110.1.0/24
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: infra-public-subnet
        - Key: ManagedBy
          Value: CloudFormation

  # Internet Gateway
  InfraInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: infra-igw
        - Key: ManagedBy
          Value: CloudFormation

  # IGW Attachment
  InfraAttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref InfraVPC
      InternetGatewayId: !Ref InfraInternetGateway

  # Route Table
  InfraRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InfraVPC
      Tags:
        - Key: Name
          Value: infra-rtb
        - Key: ManagedBy
          Value: CloudFormation

  # 0.0.0.0/0 -> IGW
  InfraRoute:
    Type: AWS::EC2::Route
    DependsOn: InfraAttachIGW
    Properties:
      RouteTableId: !Ref InfraRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InfraInternetGateway

  # Subnet → RouteTable 연결
  InfraSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InfraPublicSubnet
      RouteTableId: !Ref InfraRouteTable

  # Security Group (모든 포트 허용)
  InfraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Infra K3s Agent SG
      VpcId: !Ref InfraVPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  # Launch Template for K3s Agent
  InfraLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: infra-k3s-agent-launch-template
      LaunchTemplateData:
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        ImageId: !Sub '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId: !Ref InfraPublicSubnet
            Groups:
              - !Ref InfraSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo "k3s agent placeholder - waiting for control plane"

  # Auto Scaling Group
  InfraASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref InfraPublicSubnet
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      LaunchTemplate:
        LaunchTemplateId: !Ref InfraLaunchTemplate
        Version: !GetAtt InfraLaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: infra-k3s-agent-asg
          PropagateAtLaunch: true

Outputs:

  VpcId:
    Description: ID of created VPC
    Value: !Ref InfraVPC

  PublicSubnetId:
    Description: ID of created public subnet
    Value: !Ref InfraPublicSubnet

  LaunchTemplateId:
    Description: Launch template ID for K3s agent
    Value: !Ref InfraLaunchTemplate

  ASGName:
    Description: Auto Scaling Group name
    Value: !Ref InfraASG
