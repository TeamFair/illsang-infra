AWSTemplateFormatVersion: '2010-09-09'
Description: Prd Account - Network + K3s Agent AutoScaling 구성 (Public Subnet 기반)

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH 접속용 EC2 키페어 이름

Resources:

  # VPC 생성 (10.20.0.0/16)
  PrdVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.20.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: prd-vpc

  # Public Subnet 1 - EC2, RDS용 (AZ: ap-northeast-2a)
  PrdPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrdVPC
      CidrBlock: 10.20.1.0/24
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: prd-public-subnet

  # Public Subnet 2 - EC2, RDS용 (AZ: ap-northeast-2c)
  PrdPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrdVPC
      CidrBlock: 10.20.2.0/24
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: prd-public-subnet-2

  # Private Subnet 1 - Redis 용도 (AZ: ap-northeast-2a)
  PrdPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrdVPC
      CidrBlock: 10.20.10.0/24
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: prd-private-subnet

  # Private Subnet 2 - Redis 용도 (AZ: ap-northeast-2c)
  PrdPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrdVPC
      CidrBlock: 10.20.11.0/24
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: prd-private-subnet-2

  # 인터넷 게이트웨이 생성 및 VPC에 연결
  PrdInternetGateway:
    Type: AWS::EC2::InternetGateway

  PrdAttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PrdVPC
      InternetGatewayId: !Ref PrdInternetGateway

  # 퍼블릭 서브넷을 위한 라우팅 테이블 및 기본 라우트 설정
  PrdRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PrdVPC

  PrdRoute:
    Type: AWS::EC2::Route
    DependsOn: PrdAttachIGW
    Properties:
      RouteTableId: !Ref PrdRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PrdInternetGateway

  # 퍼블릭 서브넷에 라우팅 테이블 연결
  PrdSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrdPublicSubnet
      RouteTableId: !Ref PrdRouteTable

  PrdSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrdPublicSubnet2
      RouteTableId: !Ref PrdRouteTable

  # 공통 보안 그룹 - SSH/HTTP/HTTPS/DB/Redis 허용
  PrdSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Prd Security Group
      VpcId: !Ref PrdVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 10.20.0.0/16

  # K3s Agent EC2 LaunchTemplate (UserData는 placeholder)
  K3sLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: prd-k3s-agent-launch-template
      LaunchTemplateData:
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        ImageId: !Sub '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            SubnetId: !Ref PrdPublicSubnet
            Groups:
              - !Ref PrdSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo "k3s agent placeholder - control plane not yet available"

  # AutoScalingGroup - 최소 1개 K3s Agent EC2 유지
  K3sASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrdPublicSubnet
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      LaunchTemplate:
        LaunchTemplateId: !Ref K3sLaunchTemplate
        Version: !GetAtt K3sLaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: prd-k3s-agent-asg
          PropagateAtLaunch: true

Outputs:
  # 다른 템플릿에서 사용할 수 있도록 Export
  PrdVPC:
    Value: !Ref PrdVPC
    Export:
      Name: Prd-VPC-ID

  PrdPublicSubnet:
    Value: !Ref PrdPublicSubnet
    Export:
      Name: Prd-Public-Subnet-1

  PrdPublicSubnet2:
    Value: !Ref PrdPublicSubnet2
    Export:
      Name: Prd-Public-Subnet-2

  PrdPrivateSubnet:
    Value: !Ref PrdPrivateSubnet
    Export:
      Name: Prd-Private-Subnet-1

  PrdPrivateSubnet2:
    Value: !Ref PrdPrivateSubnet2
    Export:
      Name: Prd-Private-Subnet-2

  PrdSecurityGroup:
    Value: !Ref PrdSecurityGroup
    Export:
      Name: Prd-Security-Group

  K3sASG:
    Value: !Ref K3sASG
    Description: AutoScalingGroup for K3s Agent
